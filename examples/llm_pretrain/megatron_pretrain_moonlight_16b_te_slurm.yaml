# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# To run this recipe, please use the following command:
# torchrun --nproc-per-node=8 examples/llm_pretrain/pretrain.py --config examples/llm_pretrain/megatron_pretrain_moonlight_16b_te_slurm.yaml
# Adjust --nproc-per-node to the number of GPUs available on your host machine.


step_scheduler:
  global_batch_size: 512
  local_batch_size: 4
  ckpt_every_steps: 1000
  val_every_steps: 100  # will run every x number of gradient steps
  num_epochs: 1
  max_steps: 57205

dist_env:
  backend: nccl
  timeout_minutes: 10

rng:
  _target_: nemo_automodel.components.training.rng.StatefulRNG
  seed: 1111
  ranked: true

parallelizer:
  _target_: nemo_automodel.components.moe.parallelizer.parallelize_model
  activation_checkpointing: false

model:
  _target_: nemo_automodel.components.models.deepseek_v3.model.DeepseekV3ForCausalLM.from_config
  pretrained_model_name_or_path: /lustre/fsw/coreai_dlalgo_genai/adasif/models/models--moonshotai--Moonlight-16B-A3B/snapshots/ce8bc137e6e29c3b7540ebdd515bbc5bdb20d915/
  trust_remote_code: true
  is_meta_device: true
  backend:
    _target_: nemo_automodel.components.moe.utils.BackendConfig
    attn: te
    linear: te
    rms_norm: te
    enable_deepep: true
    fake_balanced_gate: false
    enable_hf_state_dict_adapter: true

checkpoint:
  enabled: true
  checkpoint_dir: /lustre/fsw/coreai_dlalgo_genai/adasif/checkpoints/moonlight_dclm/
  model_save_format: safetensors # torch_save or safetensors
  save_consolidated: true # saves the model in a consolidated safetensors format. Requires model_save_format to be safetensors.
  load_base_model: false

distributed:
  _target_: nemo_automodel.components.distributed.fsdp2.FSDP2Manager
  tp_size: 1
  cp_size: 1
  pp_size: 1
  dp_replicate_size: 1
  dp_size: 8
  ep_size: 8

loss_fn:
  _target_: nemo_automodel.components.loss.linear_ce.FusedLinearCrossEntropy

dataset:
  _target_: nemo_automodel.components.datasets.llm.megatron_dataset.MegatronPretraining
  paths: /lustre/fsw/coreai_dlalgo_genai/adasif/dclm/moonlight_mcore/processed_data_*_text_document*  # REPLACE THIS
  index_mapping_dir: /lustre/fsw/coreai_dlalgo_genai/adasif/dclm/moonlight_mcore/mapping_dir  # REPLACE THIS
  tokenizer:
    _target_: transformers.AutoTokenizer.from_pretrained
    pretrained_model_name_or_path: /lustre/fsw/coreai_dlalgo_genai/adasif/models/models--moonshotai--Moonlight-16B-A3B/snapshots/ce8bc137e6e29c3b7540ebdd515bbc5bdb20d915/
    trust_remote_code: true
  seq_length: 2048
  split: "0.99, 0.01, 0.00"  # train, validation, test
  splits_to_build: "train"  # has to be one of train, validation, test

dataloader:
  _target_: torchdata.stateful_dataloader.StatefulDataLoader
  collate_fn: torch.utils.data.default_collate
  dataloader_type: "single"  # or "cyclic"

validation_dataset:
  _target_: nemo_automodel.components.datasets.llm.megatron_dataset.MegatronPretraining
  paths: /lustre/fsw/coreai_dlalgo_genai/adasif/dclm/moonlight_mcore/processed_data_*_text_document*  # REPLACE THIS
  index_mapping_dir: /lustre/fsw/coreai_dlalgo_genai/adasif/dclm/moonlight_mcore/mapping_dir  # REPLACE THIS
  tokenizer:
    _target_: transformers.AutoTokenizer.from_pretrained
    pretrained_model_name_or_path: /lustre/fsw/coreai_dlalgo_genai/adasif/models/models--moonshotai--Moonlight-16B-A3B/snapshots/ce8bc137e6e29c3b7540ebdd515bbc5bdb20d915/
    trust_remote_code: true
  seq_length: 2048
  split: "0.99, 0.01, 0.00"  # train, validation, test
  splits_to_build: "validation"  # has to be one of train, validation, test
  num_val_samples: 1024

validation_dataloader:
  _target_: torchdata.stateful_dataloader.StatefulDataLoader
  collate_fn: torch.utils.data.default_collate
  dataloader_type: "single"

optimizer:
  _target_: torch.optim.AdamW
  betas: [0.9, 0.95]
  eps: 1e-8
  lr: 3e-3
  weight_decay: 0.033

lr_scheduler:
  lr_decay_style: cosine
  lr_warmup_steps: 5000
  min_lr: 0.0

# Uncomment and configure for W&B logging
wandb:
  project: adil-workspace
  entity: Nemo-automodel
  name: moonlight-16b-dclm-2048-seq_len-512-gbs-lr-3e-3
#   save_dir: <your_wandb_save_dir>
