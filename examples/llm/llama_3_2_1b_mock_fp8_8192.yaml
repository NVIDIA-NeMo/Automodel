# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# To run this recipe, please use the following command:
# torchrun --nproc-per-node=8 recipes/llm/finetune.py --config examples/llm/llama_3_2_1b_mock_fp8_8192.yaml
# Adjust --nproc-per-node to the number of GPUs available on your host machine.
#
# This example demonstrates FP8 quantization with mock dataset using sequence length 8192.

step_scheduler:
  grad_acc_steps: 1
  ckpt_every_steps: 20000
  val_every_steps: 20000  # will run every x number of gradient steps
  num_epochs: 100000

dist_env:
  backend: nccl
  timeout_minutes: 1

rng:
  _target_: nemo_automodel.components.training.rng.StatefulRNG
  seed: 1111
  ranked: true

model:
  _target_: nemo_automodel.NeMoAutoModelForCausalLM.from_pretrained
  pretrained_model_name_or_path: meta-llama/Llama-3.1-8B
  torch_dtype: bf16
  output_hidden_states: true
  attn_implementation: sdpa

# torch.compile configuration
compile:
  enabled: true
  mode: "default"  # Options: "default", "reduce-overhead", "max-autotune"
  fullgraph: false
  dynamic: true  # Set to false for better performance with fixed shapes
  backend: null  # Use default backend (inductor)

fp8:
  _target_: nemo_automodel.components.quantization.fp8.FP8Config
  recipe_name: tensorwise  # Options: tensorwise, rowwise, rowwise_with_gw_hp
  enable_fsdp_float8_all_gather: true
  precompute_float8_dynamic_scale_for_fsdp: true
  force_recompute_fp8_weight_in_bwd: true
  filter_fqns: ["lm_head"]
  emulate: false  # Set to true for testing on older GPUs without native FP8 support
  
distributed:
  _target_: nemo_automodel.components.distributed.fsdp2.FSDP2Manager
  dp_size: none
  tp_size: 1
  cp_size: 1
  sequence_parallel: false

loss_fn:
  _target_: nemo_automodel.components.loss.linear_ce.FusedLinearCrossEntropy
#nemo_automodel.components.loss.masked_ce.MaskedCrossEntropy

dataset:
  _target_: nemo_automodel.components.datasets.llm.mock_packed.build_packed_dataset
  block_size: 4096
  num_blocks: 500  

dataloader:
  _target_: torchdata.stateful_dataloader.StatefulDataLoader
  collate_fn:
    _target_: nemo_automodel.components.datasets.utils.default_collater
    pad_seq_len_divisible: 16
  batch_size: 1
  shuffle: false

optimizer:
  _target_: torch.optim.Adam
  betas: [0.9, 0.999]
  eps: 1e-8
  lr: 1.0e-5
  weight_decay: 0
  # min_lr: 1.0e-5

checkpoint:
  enabled: true
  checkpoint_dir: checkpoints_fp8/
  model_save_format: torch_save # torch_save or safetensors
  save_consolidated: false # saves the model in a consolidated safetensors format. Requires model_save_format to be safetensors. 