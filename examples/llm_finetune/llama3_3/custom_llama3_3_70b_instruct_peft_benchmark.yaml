# Based on your existing config, modified for benchmarking

seed: 42

# NEW: Add benchmark section
benchmark:
  warmup_steps: 5
  peak_tflops: 989  # H100: 989, A100: 312
  nsys_start: -1    # Set to step number to profile (e.g., 10)
  nsys_end: -1      # Set to end step (e.g., 15)
  nsys_ranks: []    # e.g., [0] to profile rank 0

step_scheduler:
  global_batch_size: 32
  local_batch_size: 1
  ckpt_every_steps: 50
  val_every_steps: 1000
  max_steps: 10

dist_env:
  backend: nccl
  timeout_minutes: 1

rng:
  _target_: nemo_automodel.components.training.rng.StatefulRNG
  seed: 1111
  ranked: true

model:
  _target_: nemo_automodel.components.models.llama.build_llama_model
  pretrained_model_name_or_path: meta-llama/Llama-3.3-70B-Instruct
  torch_dtype: bf16
  trust_remote_code: true

peft:
  _target_: nemo_automodel.components._peft.lora.PeftConfig
  match_all_linear: True
  dim: 16
  alpha: 32
  use_triton: True

checkpoint:
  enabled: false
  load_base_model: false
  checkpoint_dir: checkpoints/
  model_save_format: safetensors
  save_consolidated: false

distributed:
  _target_: nemo_automodel.components.distributed.fsdp2.FSDP2Manager
  dp_size: none
  tp_size: 8
  cp_size: 1
  pp_size: 1
  sequence_parallel: true
  activation_checkpointing: false


loss_fn:
  _target_: nemo_automodel.components.loss.masked_ce.MaskedCrossEntropy

# Use MockIterableDataset for benchmarking (faster, no I/O)
dataset:
  _target_: nemo_automodel.components.datasets.llm.mock_iterable_dataset.MockIterableDataset
  vocab_size: 100
  seq_len: 4096
  num_samples: 1000000
  batch_size: 4  # Must match local_batch_size

dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: null  # Dataset already yields batches
  # Note: model_config will be auto-injected by train_ft.py for PP models

optimizer:
  _target_: torch.optim.Adam
  betas: [0.9, 0.999]
  eps: 1e-8
  lr: 1.0e-5
  weight_decay: 0

lr_scheduler:
  lr_decay_style: cosine
  min_lr: 1.0e-6 