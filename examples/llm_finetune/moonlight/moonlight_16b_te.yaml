# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# To run this recipe, please use the following command:
# torchrun --nproc-per-node=8 recipes/llm/finetune.py --config recipes/llm/qwen_3_0p6b_hellaswag.yaml
# Adjust --nproc-per-node to the number of GPUs available on your host machine.


step_scheduler:
  global_batch_size: 128
  local_batch_size: 32
  ckpt_every_steps: 5
  val_every_steps: 100  # will run every x number of gradient steps
  num_epochs: 2
  max_steps: 6

dist_env:
  backend: nccl
  timeout_minutes: 10

rng:
  _target_: nemo_automodel.components.training.rng.StatefulRNG
  seed: 1111
  ranked: true

model:
  _target_: nemo_automodel.components.models.deepseek_v3.model.DeepseekV3ForCausalLM.from_config
  # _target_: nemo_automodel.NeMoAutoModelForCausalLM.from_pretrained_config
  pretrained_model_name_or_path: moonshotai/Moonlight-16B-A3B
  backend:
    _target_: nemo_automodel.components.moe.utils.BackendConfig
    attn: te
    linear: te
    rms_norm: te
    enable_deepep: true
    fake_balanced_gate: false
    enable_hf_state_dict_adapter: true

checkpoint:
  enabled: true
  checkpoint_dir: checkpoints/
  model_save_format: safetensors # torch_save or safetensors
  save_consolidated: true # saves the model in a consolidated safetensors format. Requires model_save_format to be safetensors.

distributed:
  _target_: nemo_automodel.components.distributed.fsdp2.FSDP2Manager
  tp_size: 1
  cp_size: 1
  pp_size: 1
  dp_replicate_size: 1
  dp_size: 2
  ep_size: 2

autopipeline:
  _target_: nemo_automodel.components.distributed.pipelining.autopipeline.AutoPipeline
  pp_schedule: interleaved1f1b
  pp_microbatch_size: 8
  round_virtual_stages_to_pp_multiple: up
  scale_grads_in_schedule: false
  patch_inner_model: false
  patch_causal_lm_model: false


loss_fn:
  _target_: nemo_automodel.components.loss.masked_ce.MaskedCrossEntropy

dataset:
  _target_: nemo_automodel.components.datasets.llm.hellaswag.HellaSwag
  path_or_dataset: rowan/hellaswag
  split: train

packed_sequence:
  # Set packed_sequence_size > 0 to run with packed sequences
  packed_sequence_size: 0
  split_across_pack: False

dataloader:
  _target_: torchdata.stateful_dataloader.StatefulDataLoader
  collate_fn: nemo_automodel.components.datasets.utils.default_collater
  shuffle: true

validation_dataset:
  _target_: nemo_automodel.components.datasets.llm.hellaswag.HellaSwag
  path_or_dataset: rowan/hellaswag
  split: validation
  num_samples_limit: 64

validation_dataloader:
  _target_: torchdata.stateful_dataloader.StatefulDataLoader
  collate_fn: nemo_automodel.components.datasets.utils.default_collater

optimizer:
  _target_: torch.optim.Adam
  betas: [0.9, 0.999]
  eps: 1e-8
  lr: 1.0e-4
  weight_decay: 0
  # min_lr: 1.0e-5

# # Uncomment and configure for W&B logging
# wandb:
#   project: <your_wandb_project>
#   entity: <your_wandb_entity>
#   name: <your_wandb_exp_name>
#   save_dir: <your_wandb_save_dir> 